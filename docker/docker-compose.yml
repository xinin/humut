version: '3.2'
services:
  dynamo:
    container_name: humut-dynamo-local
    image: amazon/dynamodb-local
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data/
    ports:
      - "8000:8000"
    volumes:
      - type: bind
        source: /usr/local/var/dynamo
        target: /home/dynamodblocal/data/
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
    networks:
      - humut-network
  dynamoUI: 
    container_name: dynamo-ui
    image: aaronshaf/dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      - DYNAMO_ENDPOINT=http://dynamo:8000
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
    networks:
      - humut-network
  coordinator:
    container_name: hummut_coordinator
    build: "./coordinator"
    ports:
      - "9099:9000"
    volumes:
      - type: bind
        source: ./coordinator
        target: /app
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
      - DYNAMO_HOST=http://dynamo:8000
      - ISLOCAL=true
    networks:
      - humut-network
  worker0:
    container_name: hummut_worker0
    build: "./worker"
    ports:
      - "9090:9000"
    environment:
      - COORDINATOR_HOST=http://coordinator:9000
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
      - WORKER_NUM=0
      - ISLOCAL=true
    networks:
      - humut-network
  worker1:
    container_name: hummut_worker1
    build: "./worker"
    ports:
       - "9091:9000"
    environment:
      - COORDINATOR_HOST=http://coordinator:9000
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
      - WORKER_NUM=1
      - ISLOCAL=true
    networks:
      - humut-network
networks:
  humut-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.2.0/24